@page "/fetchdata"
@inject HttpClient Http

<PageTitle>Weather forecast</PageTitle>

<h1>Weather forecast</h1>

<p>This component demonstrates fetching data from the server.</p>

<h4>Enter City</h4>
<input type="text" @bind="@City"/>
<button @onclick="GetWeatherForecast">Search</button>

@if (forecasts == null)
{
    <p><em>Loading...</em></p>
}
else
{
    //var today = DateTime.Today;
    <h4>@City Today: @forecasts.Date</h4>
    <p>Temperature: @forecasts.Temp °C</p>
    <p>City: @forecasts.City</p>
    <p>Summary: @forecasts.Description</p>
    <table class="table">
        <thead>
            <tr>
                <th>Date</th>
                <th>Min. (°C)</th>
                <th>Max. (°C)</th>
                <th>Description</th>
                <th>Wind</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var forecast in forecasts.Forecast)
            {
                <tr>
                    <td>@forecast.Date</td>
                    <td>@forecast.Min</td>
                    <td>@forecast.Max</td>
                    <td>@forecast.Description</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private WeatherForecast? forecasts;

    private string City = "Indaiatuba";

    protected override async Task OnInitializedAsync()
    {
        forecasts = await Http.GetFromJsonAsync<WeatherForecast>($"weather?key=365b9d79&city_name={City},SP");
    }

    private async Task GetWeatherForecast()
    {
        forecasts = await Http.GetFromJsonAsync<WeatherForecast>($"weather?key=365b9d79&city_name={City},SP");
    }

    public partial class WeatherForecast : Forecast
    {
        public int? Temp { get; set; }

        public string? City { get; set; }

        public Forecast[]? Forecast { get; set; }
    }

    public class Forecast
    {
        public string? Date { get; set; }

        public int? Max { get; set; }

        public int? Min { get; set; }

        public string? Description { get; set; }
    }
}
